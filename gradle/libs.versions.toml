[versions]
kotlinCompilerExtensionVersion = "1.5.5"

coreKtx = "1.9.0"
appcompat = "1.6.1"
material = "1.10.0"
lifecycleKtx = "2.6.2"
activityCompose = "1.8.1"
composeBom = "2023.10.01"
navigation = "2.7.5"

koin = "3.5.0"
moshi = "1.14.0"
retrofitVersion = "2.9.0"
coil = "2.5.0"

junit = "4.13.2"
mockk = "1.13.8"
kotest = "5.7.2"
coroutines-test = "1.7.3"

androidGradlePlugin = "8.2.0"
androidKotlin = "1.9.20"

dependencyAnalysis = "1.26.0"
detekt = "1.23.4"
ktlint = "1.1.0"
# ktlintGradle = "12.0.2"
kotlinterGradle = "4.1.1"
composeRules = "0.3.8"

[libraries]
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" }
android-material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-lifecycleCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleKtx" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-composeUi = { module = "androidx.compose.ui:ui" }
androidx-composeUiGraphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-composeMaterial = { module = "androidx.compose.material:material" }
androidx-composeMaterial3 = { module = "androidx.compose.material3:material3" }

koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koinAndroidCompose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofitMoshiConverter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofitVersion" }
# As we are not going to test UI, we use Coil default singleton.
# If we need DI, use `io.coil-kt:coil-base` instead and configure loader(s) ourselves.
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

test-junit4 = { module = "junit:junit", version.ref = "junit" }
test-koin-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
test-kotest = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-test" }

detekt-rules = { module = "io.gitlab.arturbosch.detekt:detekt-rules-libraries", version.ref = "detekt" }
# detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
# detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "composeRules" }
ktlint-rule-compose = { module = "io.nlopez.compose.rules:ktlint", version.ref = "composeRules" }
ktlint-rule-engine = { module = "com.pinterest.ktlint:ktlint-rule-engine", version.ref = "ktlint" }
ktlint-rule-engine-core = { module = "com.pinterest.ktlint:ktlint-rule-engine-core", version.ref = "ktlint" }
ktlint-cli-reporter-core = { module = "com.pinterest.ktlint:ktlint-cli-reporter-core", version.ref = "ktlint" }
ktlint-cli-reporter-checkstyle = { module = "com.pinterest.ktlint:ktlint-cli-reporter-checkstyle", version.ref = "ktlint" }
ktlint-cli-reporter-json = { module = "com.pinterest.ktlint:ktlint-cli-reporter-json", version.ref = "ktlint" }
ktlint-cli-reporter-html = { module = "com.pinterest.ktlint:ktlint-cli-reporter-html", version.ref = "ktlint" }
ktlint-cli-reporter-plain = { module = "com.pinterest.ktlint:ktlint-cli-reporter-plain", version.ref = "ktlint" }
ktlint-cli-reporter-sarif = { module = "com.pinterest.ktlint:ktlint-cli-reporter-sarif", version.ref = "ktlint" }
ktlint-ruleset-standard = { module = "com.pinterest.ktlint:ktlint-ruleset-standard", version.ref = "ktlint" }

# Dependencies of the included build-logic
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "androidKotlin" }
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
ktlint-kotlinter = { group = "org.jmailen.gradle", name = "kotlinter-gradle", version.ref = "kotlinterGradle" }

[plugins]
android-application = { id = "com.android.application", version.ref="androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref="androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref="androidKotlin" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysis" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
# ktlintGradle = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradle" }
kotlinterGradle = { id = "org.jmailen.kotlinter", version.ref = "kotlinterGradle" }

[bundles]
compose = ["androidx-activityCompose", "androidx-composeUi", "androidx-composeUiGraphics",
    "androidx-composeUiToolingPreview", "androidx-composeMaterial3", "androidx-composeMaterial",
    "androidx-navigation-compose", "androidx-lifecycleCompose"]
retrofit = ["retrofit", "retrofitMoshiConverter"]
koin = ["koinAndroid", "koinAndroidCompose"]

test = ["test-junit4", "test-koin-junit4", "test-mockk", "test-kotest", "test-coroutines"]
